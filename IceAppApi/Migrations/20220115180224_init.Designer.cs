// <auto-generated />
using System;
using IceAppApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IceAppApi.Migrations
{
    [DbContext(typeof(IceAppDbContext))]
    [Migration("20220115180224_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Polish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IceAppApi.Models.IceShopOffer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IceShopOwner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IceTaste")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("KindPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IceShopOwner");

                    b.HasIndex("IceTaste");

                    b.ToTable("IceShopOffer");
                });

            modelBuilder.Entity("IceAppApi.Models.IceShopOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Lat")
                        .HasColumnType("numeric(20,16)")
                        .HasColumnName("lat");

                    b.Property<decimal>("Lng")
                        .HasColumnType("numeric(20,16)")
                        .HasColumnName("lng");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("IceShopOwner");
                });

            modelBuilder.Entity("IceAppApi.Models.IceTaste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("IceTaste1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IceTaste");

                    b.HasKey("Id");

                    b.ToTable("IceTaste");
                });

            modelBuilder.Entity("IceAppApi.Models.IceShopOffer", b =>
                {
                    b.HasOne("IceAppApi.Models.IceShopOwner", "IceShopOwnerNavigation")
                        .WithMany("IceShopOffers")
                        .HasForeignKey("IceShopOwner")
                        .HasConstraintName("FK_IceShopOffer_IceShopOwner")
                        .IsRequired();

                    b.HasOne("IceAppApi.Models.IceTaste", "IceTasteNavigation")
                        .WithMany("IceShopOffers")
                        .HasForeignKey("IceTaste")
                        .HasConstraintName("FK_IceShopOffer_IceTaste")
                        .IsRequired();

                    b.Navigation("IceShopOwnerNavigation");

                    b.Navigation("IceTasteNavigation");
                });

            modelBuilder.Entity("IceAppApi.Models.IceShopOwner", b =>
                {
                    b.Navigation("IceShopOffers");
                });

            modelBuilder.Entity("IceAppApi.Models.IceTaste", b =>
                {
                    b.Navigation("IceShopOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
